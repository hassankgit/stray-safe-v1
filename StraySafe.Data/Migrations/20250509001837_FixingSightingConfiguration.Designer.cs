// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StraySafe.Data.Database;

#nullable disable

namespace StraySafe.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250509001837_FixingSightingConfiguration")]
    partial class FixingSightingConfiguration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StraySafe.Data.Database.Models.Sightings.SightingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Breed")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastSpotted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int>("Sex")
                        .HasColumnType("integer");

                    b.Property<string>("Species")
                        .HasColumnType("text");

                    b.Property<string>("SubmittedById")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SubmittedByName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SightingDetails");
                });

            modelBuilder.Entity("StraySafe.Data.Database.Models.Sightings.SightingPreview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Breed")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastSpotted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("SightingDetailId")
                        .HasColumnType("integer");

                    b.Property<string>("Species")
                        .HasColumnType("text");

                    b.Property<string>("SubmittedById")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SightingPreviews");
                });

            modelBuilder.Entity("StraySafe.Data.Database.Models.Sightings.SightingDetail", b =>
                {
                    b.OwnsOne("StraySafe.Data.Database.Models.Sightings.SightingTags", "Tags", b1 =>
                        {
                            b1.Property<int>("SightingDetailId")
                                .HasColumnType("integer");

                            b1.Property<int>("Behavior")
                                .HasColumnType("integer");

                            b1.Property<int>("Health")
                                .HasColumnType("integer");

                            b1.Property<int>("Status")
                                .HasColumnType("integer");

                            b1.HasKey("SightingDetailId");

                            b1.ToTable("SightingDetails");

                            b1.WithOwner()
                                .HasForeignKey("SightingDetailId");
                        });

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("StraySafe.Data.Database.Models.Sightings.SightingPreview", b =>
                {
                    b.OwnsOne("StraySafe.Data.Database.Models.Sightings.Coordinates", "Coordinates", b1 =>
                        {
                            b1.Property<int>("SightingPreviewId")
                                .HasColumnType("integer");

                            b1.Property<double?>("Latitude")
                                .HasColumnType("double precision");

                            b1.Property<double?>("Longitude")
                                .HasColumnType("double precision");

                            b1.HasKey("SightingPreviewId");

                            b1.ToTable("SightingPreviews");

                            b1.WithOwner()
                                .HasForeignKey("SightingPreviewId");
                        });

                    b.Navigation("Coordinates")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
